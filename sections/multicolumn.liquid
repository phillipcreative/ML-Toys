{{ 'section-multicolumn.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

{%- style -%}
  @media screen and (max-width: 749px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.57 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.57 | round: 0 }}px;
    }
  }

  @media screen and (min-width: 750px) and (max-width: 1199px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.72 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.72 | round: 0 }}px;
    }
  }

  @media screen and (min-width: 1200px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{%- liquid
  assign columns_mobile_int = section.settings.columns_mobile | plus: 0
  assign show_mobile_slider = false
  if section.settings.swipe_on_mobile and section.blocks.size > columns_mobile_int
    assign show_mobile_slider = true
  endif
-%}

<div class="multicolumn {% if section.settings.enable_center %}center-aligned{% endif %} {% if section.settings.background_color_full_width == true %}color-{{ section.settings.color_scheme }}{% else %}page-width{% endif %} {% if section.settings.background_border_radius == true and section.settings.background_color_full_width == true %}add-background-radius{% endif %} gradient{% unless section.settings.background_style == 'none' and settings.text_boxes_border_thickness > 0 or settings.text_boxes_shadow_opacity > 0 %} background-{{ section.settings.background_style }}{% endunless %}{% if section.settings.title == blank %} no-heading{% endif %}">
  <div class="page-width2 {% if section.settings.background_color_full_width == false %}color-{{ section.settings.color_scheme }}{% else %}page-width{% endif %} {% if section.settings.background_border_radius == true and section.settings.background_color_full_width == false %}add-background-radius{% endif %} section-{{ section.id }}-padding isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    {% if settings.animations_reveal_on_scroll %} data-cascade{% endif %}>

    {%- if section.settings.title != blank or section.settings.description != blank -%}
      <div class="section-heading align-{{ section.settings.heading_alignment }}">

        {%- if section.settings.title != blank -%}
          <h2 class="section-title inline-richtext {{ section.settings.heading_size }}">
            {{ section.settings.title }}
          </h2>
        {%- endif -%}

        {%- if section.settings.description != blank -%}
          {% assign description_color = "" %}
          {% if section.settings.text_color == "secondary" %}
            {% assign description_color = 'data-color="secondary"' %}
          {% endif %}
          <div class="section-description rte-{{ section.settings.text_size_block }} rte{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}" {{ description_color }}>
            {{ section.settings.description -}}
          </div>
        {%- endif -%}

        {%- if section.settings.button_label != blank and show_mobile_slider -%}
          <a href="{{ section.settings.button_link }}" class="link underlined-link large-up-hide">
            {{- section.settings.button_label | escape -}}
          </a>
        {%- endif -%}

      </div>
    {%- endif -%}

    <slider-component class="slider-mobile-gutter">
      <ul class="multicolumn-list contains-content-container grid grid-type--{{ section.settings.grid_type }} grid--{{ section.settings.columns_mobile }}-col-tablet-down grid--{{ section.settings.columns_desktop }}-col-desktop{% if show_mobile_slider %} slider slider--tablet grid--peek{% endif %}{% if section.settings.column_divider == true %} column-divider{% endif %}" id="Slider-{{ section.id }}" role="list">

        {%- liquid
          assign highest_ratio = 0
          for block in section.blocks
            if block.settings.image.aspect_ratio > highest_ratio
              assign highest_ratio = block.settings.image.aspect_ratio
            endif
          endfor
        -%}

        {%- for block in section.blocks -%}

          {%- assign empty_column = '' -%}
          {%- if block.settings.image == blank and block.settings.title == blank and block.settings.text == blank and block.settings.link_label == blank -%}
            {%- assign empty_column = 'multicolumn-list__item--empty' -%}
          {%- endif -%}

          

          <li id="Slide-{{ section.id }}-{{ forloop.index }}" class="multicolumn-list__item grid__item{% if section.settings.swipe_on_mobile %} slider__slide{% endif %}{% if section.settings.column_alignment == 'center' %} center{% endif %}{{ empty_column }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}" {% if settings.animations_reveal_on_scroll %} data-cascade style="--animation-order: {{ forloop.index }};" {% endif %} {{ block.shopify_attributes }}>
						<style>
							#Slide-{{ section.id }}-{{ forloop.index }}{
								--image_opacity: {{ block.settings.image_overlay_opacity | divided_by: 100.0 }};
							}
						</style>

            <div class="multicolumn-card content-container color-{{ block.settings.item_color_scheme }} {% if block.settings.image_cover %}image-overlay{% endif %} {% if block.settings.reduce_spaces %}card-without-spaces{% endif %}">


              {%- if block.settings.image != blank -%}

                {% if section.settings.image_ratio == 'adapt' or section.settings.image_ratio == 'circle' %}
                  {% assign spaced_image = true %}
                {% endif %}

                <div class="multicolumn-card__image-wrapper multicolumn-card__image-wrapper--{{ section.settings.image_width }}-width{% if section.settings.image_width != 'full' or spaced_image %} multicolumn-card-spacing{% endif %}">

                  <div class="media media--transparent media--{{ section.settings.image_ratio }} {% if block.settings.image_cover %}image-overlay{% endif %}"
                    {% if section.settings.image_ratio == 'adapt' %} style="padding-bottom: {{ 1 | divided_by: highest_ratio | times: 100 }}%;" {% endif %}>

                    {%- liquid
                      assign number_of_columns = section.settings.columns_desktop
                      assign number_of_columns_mobile = section.settings.columns_mobile
                      assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                      assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                      assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                      if section.settings.image_width == 'half'
                        assign image_width = 0.5
                      elsif section.settings.image_width == 'third'
                        assign image_width = 0.33
                      else
                        assign image_width = 1
                      endif
                    -%}

                    {% capture sizes %}
                      (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                      (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                      (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                      calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                    {% endcapture %}

                    {{ block.settings.image 
                      | image_url: width: 1200 
                      | image_tag: widths: '50, 75, 80, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200', 
                      sizes: sizes, 
                      loading: 'lazy',
                      class: 'multicolumn-card__image'
                    }}
                  </div>
                </div>

              {%- endif -%}

              <div class="multicolumn-card__info {% if block.settings.content_full_width %}content-full-width{% endif %}">

                {%- if block.settings.caption != blank -%}
                  <span class="multicolumn-card__caption">
                    {{- block.settings.caption -}}
                  </span>
                {%- endif -%}

                {%- if block.settings.title != blank -%}
                  <h3 class="multicolumn-card__title inline-richtext clr-{{ block.settings.heading_color }} {{ block.settings.heading_size_block }}">
                    {{- block.settings.title -}}
                  </h3>
                {%- endif -%}

                {%- if block.settings.subheading != blank -%}
                  <div class="multicolumn-card__subheading rte">
                    {{- block.settings.subheading -}}
                  </div>
                {%- endif -%}

                {%- if block.settings.text != blank -%}
                  <div class="multicolumn-card__description rte rte-{{ block.settings.text_size_block }} clr-{{ block.settings.text_color }}">
                    {{- block.settings.text -}}
					
                  </div>
                {%- endif -%}

				{%- liquid
					assign button_style = 'button button--secondary'

					if block.settings.button_style == 'link'
					  assign button_style = 'link underlined-link'
					elsif block.settings.button_style == 'solid'
					  assign button_style = 'button'
					elsif block.settings.button_style == 'link_icon'
					  assign button_style = 'link animate-arrow'
					elsif block.settings.button_style == 'link_hover'
					  assign button_style = 'link link-hover'
					endif
				-%}

                {%- if block.settings.link_label != blank -%}
                  <a {% if block.settings.link == blank %} role="link" aria-disabled="true" {% else %} href="{{ block.settings.link }}" {% endif %} class="{{ button_style }}">
                    {%- if block.settings.button_style != 'link_icon' -%}
                    <span>{{- block.settings.link_label | escape -}}</span>
                      {%- else -%}
                    <span>{{- block.settings.link_label | escape -}}</span>
                    <span class="icon-wrap">
                    {%- render 'icon-caret' -%}
                    </span>
                      {%- endif -%}
                  </a>
                {%- endif -%}
              </div>
            </div>

          </li>

        {%- endfor -%}
      </ul>

      {%- if show_mobile_slider -%}
        <div class="slider-buttons no-js-hidden large-up-hide">
          <button type="button" class="slider-button slider-button--prev" name="previous" aria-label="{{ 'general.slider.previous_slide' | t }}">
            {% render 'icon-arrow-short' %}
          </button>

          <div class="slider-counter caption">
            <span class="slider-counter--current">1</span>
            <span aria-hidden="true"> / </span>
            <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
            <span class="slider-counter--total">{{ section.blocks.size }}</span>
          </div>

          <button type="button" class="slider-button slider-button--next" name="next" aria-label="{{ 'general.slider.next_slide' | t }}">
            {% render 'icon-arrow-short' %}
          </button>
        </div>
      {%- endif -%}
    </slider-component>

    <div class="center{% if show_mobile_slider %} small-hide medium-hide{% endif %}">
      {%- if section.settings.button_label != blank -%}
        <a class="button button--primary" {% if section.settings.button_link == blank %} role="link" aria-disabled="true" {% else %} href="{{ section.settings.button_link }}"{% endif %}>
          <span>
            {{ section.settings.button_label | escape }}
          </span>
        </a>
      {%- endif -%}
    </div>
  </div>
</div>

<style>
  @media only screen and (min-width:990px) {
    .multicolumn.center-aligned .multicolumn.background-primary .multicolumn-card {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }

    .multicolumn.center-aligned .multicolumn-card__image-wrapper {
      margin: auto !important;
    }

    .multicolumn.center-aligned .multicolumn-card__info{
      text-align: center;
    }
  }
</style>

{% schema %}
  {
    "name": "t:sections.multicolumn.name",
    "class": "section section-multicolumn",
    "tag": "section",
    "disabled_on": {
      "groups": [
        "header",
        "aside"
      ],
      "templates": [
        "404"
      ]
    },
    "settings": [
      {
        "type": "checkbox",
        "id": "enable_center",
        "label": "Enable Center Mode",
        "info": "Enable column elements to be center aligned",
        "default": true
      },
      {
        "type": "inline_richtext",
        "id": "title",
        "default": "Multicolumn",
        "label": "t:sections.multicolumn.settings.title.label"
      },
      {
        "type": "text_alignment",
        "id": "heading_alignment",
        "label": "Heading alignment",
        "default": "center"
      },
      {
        "type": "select",
        "id": "heading_size",
        "options": [
          {
            "value": "h3",
            "label": "t:sections.all.heading_size.options__1.label"
          },
          {
            "value": "h2",
            "label": "t:sections.all.heading_size.options__2.label"
          },
          {
            "value": "h1",
            "label": "t:sections.all.heading_size.options__3.label"
          }
        ],
        "default": "h2",
        "label": "t:sections.all.heading_size.label"
      },
      {
        "type": "richtext",
        "id": "description",
        "label": "t:sections.featured-collection.settings.description.label"
      },
      {
        "type": "select",
        "id": "text_size_block",
        "options": [
          {
          "value": "small",
          "label": "Small"
          },
          {
          "value": "medium",
          "label": "Medium"
          },
          {
          "value": "large",
          "label": "Large"
          }
          ],
        "default": "medium",
        "label": "Description font size"
      },
      {
        "type": "select",
        "id": "text_color",
        "options": [
          {
            "value": "main",
            "label": "Main"
          },
          {
            "value": "secondary",
            "label": "Secondary"
          }
        ],
        "default": "main",
        "label": "Description color"
      },  
      {
        "type": "select",
        "id": "image_width",
        "options": [
          {
            "value": "fourth",
            "label": "One-fourth width of column"
          },
          {
            "value": "third",
            "label": "t:sections.multicolumn.settings.image_width.options__1.label"
          },
          {
            "value": "half",
            "label": "t:sections.multicolumn.settings.image_width.options__2.label"
          },
          {
            "value": "full",
            "label": "t:sections.multicolumn.settings.image_width.options__3.label"
          }
        ],
        "default": "full",
        "label": "t:sections.multicolumn.settings.image_width.label"
      },
      {
        "type": "select",
        "id": "image_ratio",
        "options": [
          {
            "value": "adapt",
            "label": "t:sections.multicolumn.settings.image_ratio.options__1.label"
          },
          {
            "value": "portrait",
            "label": "t:sections.multicolumn.settings.image_ratio.options__2.label"
          },
          {
            "value": "square",
            "label": "t:sections.multicolumn.settings.image_ratio.options__3.label"
          },
          {
            "value": "landscape",
            "label": "Landscape"
          },
          {
            "value": "circle",
            "label": "t:sections.multicolumn.settings.image_ratio.options__4.label"
          }
        ],
        "default": "adapt",
        "label": "t:sections.multicolumn.settings.image_ratio.label"
      },
      {
        "type": "range",
        "id": "columns_desktop",
        "min": 1,
        "max": 6,
        "step": 1,
        "default": 3,
        "label": "t:sections.multicolumn.settings.columns_desktop.label"
      },
      {
        "type": "select",
        "id": "grid_type",
        "options": [
          {
            "value": "grid",
            "label": "Grid"
          },
          {
            "value": "masonry",
            "label": "Masonry"
          }
        ],
        "default": "grid",
        "label": "Grid type"
      },
      {
        "type": "checkbox",
        "id": "column_divider",
        "default": false,
        "label": "Column divider"
      },
      {
        "type": "select",
        "id": "column_alignment",
        "options": [
          {
            "value": "left",
            "label": "t:sections.multicolumn.settings.column_alignment.options__1.label"
          },
          {
            "value": "center",
            "label": "t:sections.multicolumn.settings.column_alignment.options__2.label"
          }
        ],
        "default": "left",
        "label": "t:sections.multicolumn.settings.column_alignment.label"
      },
      {
        "type": "select",
        "id": "background_style",
        "options": [
          {
            "value": "none",
            "label": "t:sections.multicolumn.settings.background_style.options__1.label"
          },
          {
            "value": "primary",
            "label": "t:sections.multicolumn.settings.background_style.options__2.label"
          }
        ],
        "default": "primary",
        "label": "t:sections.multicolumn.settings.background_style.label"
      },
      {
        "type": "text",
        "id": "button_label",
        "default": "Button label",
        "label": "t:sections.multicolumn.settings.button_label.label"
      },
      {
        "type": "url",
        "id": "button_link",
        "label": "t:sections.multicolumn.settings.button_link.label"
      },
      {
        "type": "color_scheme",
        "id": "color_scheme",
        "label": "t:sections.all.colors.label",
        "default": "scheme-1"
      },
      {
        "type": "checkbox",
        "id": "background_color_full_width",
        "label": "Background color full width",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "background_border_radius",
        "label": "Background border radius",
        "default": false
      },
      {
        "type": "header",
        "content": "t:sections.multicolumn.settings.header_mobile.content"
      },
      {
        "type": "select",
        "id": "columns_mobile",
        "options": [
          {
            "value": "1",
            "label": "t:sections.multicolumn.settings.columns_mobile.options__1.label"
          },
          {
            "value": "2",
            "label": "t:sections.multicolumn.settings.columns_mobile.options__2.label"
          }
        ],
        "default": "1",
        "label": "t:sections.multicolumn.settings.columns_mobile.label"
      },
      {
        "type": "checkbox",
        "id": "swipe_on_mobile",
        "default": false,
        "label": "t:sections.multicolumn.settings.swipe_on_mobile.label"
      },
      {
        "type": "header",
        "content": "t:sections.all.padding.section_padding_heading"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 180,
        "step": 2,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 70
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 180,
        "step": 2,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 70
      }
    ],
    "blocks": [
      {
        "type": "column",
        "name": "t:sections.multicolumn.blocks.column.name",
        "settings": [
          {
            "type": "color_scheme",
            "id": "item_color_scheme",
            "label": "t:sections.all.colors.label",
            "default": "scheme-1"
          },
          {
            "type": "image_picker",
            "id": "image",
            "label": "t:sections.multicolumn.blocks.column.settings.image.label"
          },
          {
            "type": "checkbox",
            "id": "image_cover",
            "default": false,
            "label": "t:sections.multicolumn.blocks.column.settings.image_cover.label"
          },
          {
            "type": "range",
            "id": "image_overlay_opacity",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "label": "Overlay",
            "default": 0
          },
          {
            "type": "checkbox",
            "id": "reduce_spaces",
            "default": false,
            "label": "Hide inner spaces"
          },
          {
            "type": "checkbox",
            "id": "content_full_width",
            "default": false,
            "label": "Content full width",
			"info": "before this option : hide inner space and content width - read more how to use these two options (https://docs.muup.co/article/1072-column)"
          },
          {
            "type": "text",
            "id": "caption",
            "label": "Caption"
          },
          {
            "type": "inline_richtext",
            "id": "title",
            "default": "Column",
            "label": "t:sections.multicolumn.blocks.column.settings.title.label"
          },
          {
            "type": "select",
            "id": "heading_size_block",
            "options": [
              {
                "value": "h2",
                "label": "Extra Large"
              },
              {
                "value": "h3",
                "label": "Large"
              },
              {
                "value": "h4",
                "label": "Medium"
              },
              {
                "value": "h5",
                "label": "Small"
              },
              {
                "value": "h6",
                "label": "Extra small"
              }
            ],
            "default": "h2",
            "label": "t:sections.all.heading_size.label"
          },
					{
						"type": "select",
						"id": "heading_color",
						"options": [
							{
								"value": "foreground",
								"label": "Text"
							},
							{
								"value": "foreground-secondary",
								"label": "Text secondary"
							},
							{
								"value": "accent",
								"label": "Accent"
							}
						],
						"default": "foreground",
						"label": "Heading color"
					},
          {
            "type": "richtext",
            "id": "subheading",
            "label": "Subheading"
          },
          {
            "type": "richtext",
            "id": "text",
            "default": "<p>Pair text with an image to focus on your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.</p>",
            "label": "t:sections.multicolumn.blocks.column.settings.text.label"
          },
		  {
            "type": "select",
            "id": "text_size_block",
            "options": [
              {
                "value": "small",
                "label": "Small"
              },
              {
                "value": "medium",
                "label": "Medium"
              },
              {
                "value": "large",
                "label": "Large"
              }
            ],
            "default": "medium",
            "label": "Description font size"
          },
					{
						"type": "select",
						"id": "text_color",
						"options": [
							{
								"value": "foreground",
								"label": "Text"
							},
							{
								"value": "foreground-secondary",
								"label": "Text secondary"
							},
							{
								"value": "accent",
								"label": "Accent"
							}
						],
						"default": "foreground",
						"label": "Description color"
					},
		  {
			"type": "select",
			"id": "button_style",
			"label": "Button style",
			"options": [
			  {
				"value": "link",
				"label": "Inline button"
			  },
			  {
				"value": "link_hover",
				"label": "Inline button with underline on hover"
			  },
			  {
				"value": "link_icon",
				"label": "Inline button with icon"
			  },
			  {
				"value": "outline",
				"label": "Outline button"
			  },
			  {
				"value": "solid",
				"label": "Solid button"
			  }
				],
				"default": "link_icon"
		  },
        {
          "type": "text",
          "id": "link_label",
          "label": "t:sections.multicolumn.blocks.column.settings.link_label.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.multicolumn.blocks.column.settings.link.label"
        }
        ]
      }
    ],
    "presets": [
      {
        "name": "t:sections.multicolumn.presets.name",
        "blocks": [
          {
            "type": "column"
          },
          {
            "type": "column"
          },
          {
            "type": "column"
          }
        ]
      }
    ]
  }
{% endschema %}