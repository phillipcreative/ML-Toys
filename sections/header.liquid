<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-items.css' | asset_url }}" media="print" onload="this.media='all'">

{{ 'component-card.css' | asset_url | stylesheet_tag }}
  {{ 'quick-add.css' | asset_url | stylesheet_tag }}
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{%- if section.settings.menu_type_desktop == 'mega' -%}
  <link rel="stylesheet" href="{{ 'component-mega-menu.css' | asset_url }}" media="print" onload="this.media='all'">
  <noscript>{{ 'component-mega-menu.css' | asset_url | stylesheet_tag }}</noscript>
{%- endif -%}

{%- if settings.cart_type == "drawer" and template != 'cart' -%}
  <link rel="stylesheet" href="{{ 'component-cart-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
  <link rel="stylesheet" href="{{ 'component-cart.css' | asset_url }}" media="print" onload="this.media='all'">
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
  <link rel="stylesheet" href="{{ 'component-discounts.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

<noscript>{{ 'component-list-menu.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-search.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-menu-drawer.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-cart-notification.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-cart-items.css' | asset_url | stylesheet_tag }}</noscript>

{%- liquid
	assign transparent_header = false
	assign pages_transparent_header = section.blocks | where: 'type', 'pages_transparent_header' | first
	assign transparent_header_scheme = pages_transparent_header.settings.color_scheme

	if pages_transparent_header and pages_transparent_header.settings.pages != blank 
		for link in pages_transparent_header.settings.pages.links
			if link.active 
				assign transparent_header = true
			endif
		endfor
	endif
-%}

<style>
  {%- if section.settings.sticky_header_type == 'reduce-logo-size' -%}
    .scrolled-past-header .header__heading-logo-wrapper {
      width: 75%;
    }
  {%- endif -%}
  
  {%- if section.settings.menu_type_desktop != "drawer" -%}
    @media screen and (min-width: 990px) {
      header-drawer:not(.additional-drawer) {
        justify-self: start;
        margin-left: -1.2rem;
      }
    }
    @media screen and (min-width: 1025px) {
      header-drawer:not(.additional-drawer) {
        display: none;
      }
    }
  {%- endif -%}
  .menu-drawer-container {
    display: flex;
  }
  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  .list-menu--inline {
    display: inline-flex;
    flex-wrap: wrap;
  }
  summary.list-menu__item {
    padding-right: 2.7rem;
  }
  .list-menu__item {
    display: flex;
    align-items: center;
    line-height: 1.3;
  }
  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: 1.8;
  }
  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0.5rem;
      padding-top: 0.5rem;
    }
  }

	.menu-drawer__account,
  .header__inline-menu .header__menu-item {
    font-weight: {{ section.settings.menu_font_weight }};
  }

	{% if transparent_header %}
		{% for scheme in settings.color_schemes -%}
			{% assign scheme_classes = scheme_classes | append: ', .color-' | append: scheme.id %}
			{% if transparent_header_scheme.id == scheme.id %}
				.transparent-header-scheme.header-at-top {
					--color-background: {{ scheme.settings.background.red }}, 
					{{ scheme.settings.background.green }}, 
					{{ scheme.settings.background.blue }};
					{% if scheme.settings.background_gradient != empty %}
						--gradient-background: {{ scheme.settings.background_gradient }};
					{% else %}
						--gradient-background: {{ scheme.settings.background }};
					{% endif %}

					{% liquid
						assign background_color = scheme.settings.background
						assign background_color_brightness = background_color | color_brightness
						if background_color_brightness <= 26
							assign background_color_contrast = background_color | color_lighten: 50
						elsif background_color_brightness <= 65
							assign background_color_contrast = background_color | color_lighten: 5
						else
							assign background_color_contrast = background_color | color_darken: 25
						endif 
					%}

					--color-foreground: {{ scheme.settings.text.red }}, {{ scheme.settings.text.green }}, {{ scheme.settings.text.blue }};
					--color-background-contrast: {{ background_color_contrast.red }}, {{ background_color_contrast.green }}, {{ background_color_contrast.blue }};
					--color-foreground-secondary: {{ scheme.settings.text_secondary.red }}, {{ scheme.settings.text_secondary.green }}, {{ scheme.settings.text_secondary.blue }};
					--color-shadow: {{ scheme.settings.shadow.red }}, {{ scheme.settings.shadow.green }}, {{ scheme.settings.shadow.blue }};
					--color-accent: {{ scheme.settings.accent_color.red }}, {{ scheme.settings.accent_color.green }}, {{ scheme.settings.accent_color.blue }};

					--color-button: {{ scheme.settings.button.red }}, {{ scheme.settings.button.green }}, {{ scheme.settings.button.blue }};
					--color-button-text: {{ scheme.settings.button_label.red }}, {{ scheme.settings.button_label.green }}, {{ scheme.settings.button_label.blue }};
					--color-button-hover: {{ scheme.settings.button_hover.red }}, {{ scheme.settings.button_hover.green }}, {{ scheme.settings.button_hover.blue }};
					--color-button-text-hover: {{ scheme.settings.button_label_hover.red }}, {{ scheme.settings.button_label_hover.green }}, {{ scheme.settings.button_label_hover.blue }};
					--color-button-2: {{ scheme.settings.button_2.red }}, {{ scheme.settings.button_2.green }}, {{ scheme.settings.button_2.blue }};
					--color-button-text-2: {{ scheme.settings.button_label_2.red }}, {{ scheme.settings.button_label_2.green }}, {{ scheme.settings.button_label_2.blue }};
					--color-button-2-hover: {{ scheme.settings.button_2_hover.red }}, {{ scheme.settings.button_2_hover.green }}, {{ scheme.settings.button_2_hover.blue }};
					--color-button-text-2-hover: {{ scheme.settings.button_label_2_hover.red }}, {{ scheme.settings.button_label_2_hover.green }}, {{ scheme.settings.button_label_2_hover.blue }};
					--color-secondary-button: {{ scheme.settings.background.red }}, {{ scheme.settings.background.green }}, {{ scheme.settings.background.blue }};
					--color-secondary-button-text: {{ scheme.settings.secondary_button_label.red }}, {{ scheme.settings.secondary_button_label.green }}, {{ scheme.settings.secondary_button_label.blue }};

					--color-link: {{ scheme.settings.secondary_button_label.red }}, {{ scheme.settings.secondary_button_label.green }}, {{ scheme.settings.secondary_button_label.blue }};

					--color-badge-foreground: {{ scheme.settings.text.red }}, {{ scheme.settings.text.green }}, {{ scheme.settings.text.blue }};
					--color-badge-background: {{ scheme.settings.background.red }}, {{ scheme.settings.background.green }}, {{ scheme.settings.background.blue }};
					--color-badge-border: {{ scheme.settings.text.red }}, {{ scheme.settings.text.green }}, {{ scheme.settings.text.blue }};
					--input-border-color: {{ scheme.settings.input_border_color.red }}, {{ scheme.settings.input_border_color.green }}, {{ scheme.settings.input_border_color.blue }};
					--payment-terms-background-color: rgb({{ scheme.settings.background.rgb }});
				}
			{% endif %}	
		{% endfor %}
			
		.header-wrapper.transparent-header-scheme.header-at-top  {
			background: transparent;
		}
	{% endif %}
</style>

{%- style -%}
  .header {
    padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 1.5rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 1.5rem;
  }
  .section-header {
    position: sticky;
  }
  @media screen and (min-width: 990px) {
    .header {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}


<svg xmlns="http://www.w3.org/2000/svg" class="hidden">
  <symbol id="icon-search" viewbox="0 0 18 19" fill="none">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M11.03 11.68A5.784 5.784 0 112.85 3.5a5.784 5.784 0 018.18 8.18zm.26 1.12a6.78 6.78 0 11.72-.7l5.4 5.4a.5.5 0 11-.71.7l-5.41-5.4z" fill="currentColor"/>
  </symbol>
  <symbol id="icon-reset" class="icon icon-close"  fill="none" viewBox="0 0 18 18" stroke="currentColor">
    <circle r="8.5" cy="9" cx="9" stroke-opacity="0.2"/>
    <path d="M6.82972 6.82915L1.17193 1.17097" stroke-linecap="round" stroke-linejoin="round" transform="translate(5 5)"/>
    <path d="M1.22896 6.88502L6.77288 1.11523" stroke-linecap="round" stroke-linejoin="round" transform="translate(5 5)"/>
  </symbol>
  <symbol id="icon-close" class="icon icon-close" fill="none" viewBox="0 0 18 17">
    <path d="M.865 15.978a.5.5 0 00.707.707l7.433-7.431 7.579 7.282a.501.501 0 00.846-.37.5.5 0 00-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 10-.707-.708L8.991 7.853 1.413.573a.5.5 0 10-.693.72l7.563 7.268-7.418 7.417z" fill="currentColor">
  </symbol>
</svg>

{%- liquid
  for block in section.blocks
    if block.type == '@app'
      assign has_app_block = true
    endif
  endfor
-%}

{% if section.settings.sticky_header_type != 'none' %}
  <sticky-header class="header-wrapper header-at-top color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %}{% if section.settings.show_shadow == true %} header-shadow{% endif %}{% if section.settings.round_borders == true %} header-rounded{% endif %} {% if transparent_header == true %} header-transparent transparent-header-scheme {% endif %}" data-sticky-type="{{ section.settings.sticky_header_type }}">
{% else %}
  <div class="header-wrapper header-at-top color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %}{% if section.settings.round_borders == true %} header-rounded{% endif %}{% if transparent_header == true %} header-transparent transparent-header-scheme{% endif %}" style="{% if transparent_header == true %}margin-bottom: -{{ section.settings.header_height | default: 0 }}px;{% endif %}">
{% endif %}

  {%- liquid
    assign social_links = false
    assign localization_forms = false

    if settings.social_twitter_link != blank or settings.social_facebook_link != blank or settings.social_pinterest_link != blank or settings.social_instagram_link != blank or settings.social_youtube_link != blank or settings.social_vimeo_link != blank or settings.social_tiktok_link != blank or settings.social_tumblr_link != blank or settings.social_snapchat_link != blank
      assign social_links = true
    endif

    if settings.search_type == 'inline' or settings.search_type == 'inline-cover'
      assign inline_search = true
    endif

    if localization.available_countries.size > 1 and section.settings.enable_country_selector or section.settings.enable_language_selector and localization.available_languages.size > 1
      assign localization_forms = true
    endif
  -%}
  
  <header class="header header--{{ section.settings.logo_position }} header--mobile-{{ section.settings.mobile_logo_position }} page-width{% if section.settings.menu_type_desktop == 'drawer' %} drawer-menu{% endif %}{% if section.settings.menu != blank %} header--has-menu{% endif %}{% if has_app_block %} header--has-app{% endif %}{% if social_links %} header--has-social{% endif %}{% if shop.customer_accounts_enabled %} header--has-account{% endif %}{% if localization_forms %} header--has-localizations{% endif %}{% if inline_search %} inline-header-search{% endif %}">
    {%- liquid
      if section.settings.menu != blank
        render 'header-drawer'
      endif

      if section.settings.logo_position == 'top-center' or section.settings.menu == blank
        render 'header-search', input_id: 'Search-In-Modal-1', search_type: settings.search_type
      endif
    -%}

    {%- if section.settings.logo_position != 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
          <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
            {%- if settings.logo != blank or settings.logo_transparent != blank and transparent_header -%}
              <div class="header__heading-logo-wrapper {% if settings.logo_transparent != blank %} has-transparent-logo{%  endif %}">
								{%  if settings.logo != blank %}
									{%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
									{%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
									{% capture sizes %}(max-width: {{ settings.logo_width | times: 2 }}px) 50vw, {{ settings.logo_width }}px{% endcapture %}
									{% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
									{{ settings.logo | image_url: width: 600 | image_tag:
										class: 'header__heading-logo header__heading-logo--default motion-reduce',
										widths: widths,
										height: logo_height,
										width: settings.logo_width,
										alt: logo_alt,
										sizes: sizes,
										preload: true
									}}								
								{% endif %}
								{%  if settings.logo_transparent != blank and transparent_header %}
									
									{%- assign logo_alt = settings.logo_transparent.alt | default: shop.name | escape -%}
									{%- assign logo_height = settings.logo_width | divided_by: settings.logo_transparent.aspect_ratio -%}
									{% capture sizes %}(max-width: {{ settings.logo_width | times: 2 }}px) 50vw, {{ settings.logo_width }}px{% endcapture %}
									{% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
									{{ settings.logo_transparent | image_url: width: 600 | image_tag:
										class: 'header__heading-logo header__heading-logo--transparent motion-reduce',
										widths: widths,
										height: logo_height,
										width: settings.logo_width,
										alt: logo_alt,
										sizes: sizes,
										preload: true
									}}								
								{% endif %}
                
              </div>
            {%- else -%}
              <span class="h4">{{ shop.name }}</span>
            {%- endif -%}
          </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}

		{%- if section.settings.menu != blank and section.settings.menu_type_desktop != 'drawer'-%}

			{% assign menu_icon_blocks = section.blocks | where: "type", "item_icon" %}

			<nav class="header__inline-menu">
				<ul class="list-menu list-menu--inline" role="list">

					{%- for block in section.blocks -%}
						{%- case block.type -%}
							{%- when 'link_list' -%}
								{% if block.settings.menu_drawer != blank %}
									<li>
										<header-drawer class="additional-drawer" data-breakpoint="desktop">
											<details id="Details-menu-drawer-container-2" class="menu-drawer-container">
				
												<summary class="header-drawer-icon header__menu-item header__icon--menu list-menu__item link link--text focus-inset" aria-label="{{ 'sections.header.menu' | t }}">

													{% if block.settings.icon != blank %}
														<span class="menu-item-icon icon-{{ block.settings.icon_position }}">
															<img src="{{ block.settings.icon | image_url: width: block.settings.icon_width }}" alt="{{ block.settings.icon.alt | escape }}"
																width="{{ block.settings.icon_width }}" height="{{ block.settings.icon_width | divided_by: block.settings.icon.aspect_ratio | ceil }}" loading="lazy">
														</span>
													{% endif %}
													<span>
														{{ block.settings.menu_drawer_title }}
													</span>
													{% render 'icon-caret' %}
												</summary>
										
												<div id="menu-drawer" class="gradient menu-drawer motion-reduce color-{{ section.settings.menu_color_scheme }}">
													<div class="menu-drawer__inner-container">
														<div class="menu-drawer__navigation-container">
				
															<div class="header-drawer-header">
																{%- if settings.logo != blank -%}
																	<a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
																		<div class="header__heading-logo-wrapper">
																			{%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
																			{%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
																			{% capture sizes %}(max-width: {{ settings.logo_width | times: 2 }}px) 50vw, {{ settings.logo_width }}px{% endcapture %}
																			{% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
																			{{ settings.logo | image_url: width: 600 | image_tag:
																				class: 'header__heading-logo motion-reduce',
																				widths: widths,
																				height: logo_height,
																				width: settings.logo_width,
																				alt: logo_alt,
																				sizes: sizes,
																				preload: true
																			}}
																		</div>
																	</a>
																{%- endif -%}
				
																<span>
																	{% render 'icon-close' %}
																</span>
															</div>
															
															<nav class="menu-drawer__navigation">
																<ul class="menu-drawer__menu has-submenu list-menu" role="list">
																	{%- for link in block.settings.menu_drawer.links -%}
																		<li>
																			{%- if link.links != blank -%}
																				<details id="Details-menu-drawer-menu-item-{{ forloop.index }}">
																					<summary id="HeaderDrawer-{{ link.handle }}" class="menu-drawer__menu-item list-menu__item link link--text focus-inset{% if link.child_active %} menu-drawer__menu-item--active{% endif %}">
																						{{ link.title | escape }}
																						{% render 'icon-caret' %}
																					</summary>
										
																					<div id="link-{{ link.handle | escape }}" class="menu-drawer__submenu has-submenu gradient motion-reduce" tabindex="-1">
																						<div class="menu-drawer__inner-submenu">
										
																							<button class="menu-drawer__close-button link link--text focus-inset" aria-expanded="true">
																								{% render 'icon-caret' %}
																								{{ link.title | escape }}
																							</button>
										
																							<ul class="menu-drawer__menu list-menu" role="list" tabindex="-1">
																								{%- for childlink in link.links -%}
																									<li>
																										{%- if childlink.links == blank -%}
																											<a id="HeaderDrawer-{{ link.handle }}-{{ childlink.handle }}" href="{{ childlink.url }}"
																												class="menu-drawer__menu-item link link--text list-menu__item focus-inset{% if childlink.current %} menu-drawer__menu-item--active{% endif %}"
																												{% if childlink.current %} aria-current="page" {% endif %}>
																												{{ childlink.title | escape }}
																											</a>
																										{%- else -%}
																											<details id="Details-menu-drawer-{{ link.handle }}-{{ childlink.handle }}">
																												<summary id="HeaderDrawer-{{ link.handle }}-{{ childlink.handle }}" class="menu-drawer__menu-item link link--text list-menu__item focus-inset">
																													{{ childlink.title | escape }}
																													{% render 'icon-caret' %}
																												</summary>
																												<div id="childlink-{{ childlink.handle | escape }}" class="menu-drawer__submenu has-submenu gradient motion-reduce">
										
																													<button class="menu-drawer__close-button link link--text focus-inset" aria-expanded="true">
																														{% render 'icon-caret' %}
																														{{ childlink.title | escape }}
																													</button>
										
																													<ul class="menu-drawer__menu list-menu" role="list" tabindex="-1">
																														{%- for grandchildlink in childlink.links -%}
																															<li>
																																<a id="HeaderDrawer-{{ link.handle }}-{{ childlink.handle }}-{{ grandchildlink.handle }}" href="{{ grandchildlink.url }}"
																																	class="menu-drawer__menu-item link link--text list-menu__item focus-inset{% if grandchildlink.current %} menu-drawer__menu-item--active{% endif %}"
																																	{% if grandchildlink.current %}  aria-current="page" {% endif %}>
										
																																	{{ grandchildlink.title | escape }}
																																</a>
																															</li>
																														{%- endfor -%}
																													</ul>
																												</div>
																											</details>
																										{%- endif -%}
																									</li>
																								{%- endfor -%}
																							</ul>
																						</div>
																					</div>
																				</details>
																			{%- else -%}
																				<a id="HeaderDrawer-{{ link.handle }}" href="{{ link.url }}" class="menu-drawer__menu-item list-menu__item link link--text focus-inset{% if link.current %} menu-drawer__menu-item--active{% endif %}" {% if link.current %} aria-current="page" {% endif %}>
																					{{ link.title | escape }}
																				</a>
																			{%- endif -%}
																		</li>
																	{%- endfor -%}
																</ul>
															</nav>
				
															{% if section.settings.drawer_product != blank %}
																{% liquid
																	assign menu_id = 2
																	if section.settings.menu_type_desktop == 'mega'
																		assign menu_id = 3
																	endif
																%}
																<div class="menu-drawer__product contains-card contains-card--product">
																	{% render 'card-product',
																		card_product: section.settings.drawer_product,
																		media_aspect_ratio: 'square',
																		show_secondary_image: true,
																		show_vendor: false,
																		show_rating: true,
																		show_compare: settings.enable_compare,
																		show_quick_add: true,
																		section_id: section.id,
																		menu_id: menu_id
																	%}
																</div>
															{% endif %}
				
														</div>
													</div>
												</div>
				
											</details>
										</header-drawer>
									</li>
								{% endif %}
						{%- endcase -%}
					{%- endfor -%}

					{%- for link in section.settings.menu.links -%}
						<li>

							{%- if link.links != blank -%}
								{% liquid
									assign has_sub_sub_menu = false
									for childlink in link.links
										if childlink.links != blank
											assign has_sub_sub_menu = true
										endif
									endfor
								%}					
								{% if section.settings.menu_type_desktop == 'mega' and has_sub_sub_menu == true %}
									{% render 'header-mega-menu', link: link %}
								{% elsif section.settings.menu_type_desktop == 'mega' and has_sub_sub_menu == false %}
										{% render 'header-dropdown-menu', link: link %}
								{% elsif section.settings.menu_type_desktop == 'dropdown' %}
									{% render 'header-dropdown-menu', link: link %}
								{% endif %}						

							{%- else -%}

								<a id="HeaderMenu-{{ link.handle }}" href="{{ link.url }}" class="header__menu-item list-menu__item link link--text focus-inset" {% if link.current %} aria-current="page"{% endif %}>

									{% if menu_icon_blocks != blank %}
										{% for block in menu_icon_blocks %}
											{%- case block.type -%}
												{%- when 'item_icon' -%}
													{% if block.settings.menu_icon_title == link.title and block.settings.icon != blank %}
														{% assign matching_icon = block.settings.icon %}
															<span class="menu-item-icon icon-{{ block.settings.icon_position }}">
																<img src="{{ matching_icon | image_url: width: block.settings.icon_width }}" alt="{{ matching_icon.alt | escape }}"
																	width="{{ block.settings.icon_width }}" height="{{ block.settings.icon_width | divided_by: matching_icon.aspect_ratio | ceil }}" loading="lazy">
															</span>
													{% endif %}
												{%- endcase -%}
										{% endfor %}
									{% endif %}
									
									<span {%- if link.current %} class="header__active-menu-item"{% endif %}>
										{{- link.title | escape -}}
									</span>
								</a>
							{%- endif -%}
						</li>
					{%- endfor -%}
				</ul>
			</nav>
		{% endif %}

    {%- if section.settings.logo_position == 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
          <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
            {%- if settings.logo != blank or settings.logo_transparent != blank and transparent_header -%}
              <div class="header__heading-logo-wrapper {% if settings.logo_transparent != blank %} has-transparent-logo{%  endif %}">
								{%  if settings.logo != blank %}
									{%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
									{%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
									{% capture sizes %}(min-width: 750px) {{ settings.logo_width }}px, 50vw{% endcapture %}
									{% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
									{{ settings.logo | image_url: width: 600 | image_tag:
										class: 'header__heading-logo header__heading-logo--default',
										widths: widths,
										height: logo_height,
										width: settings.logo_width,
										alt: logo_alt,
										sizes: sizes,
										preload: true
									}}
								{% endif %}

								{%  if settings.logo_transparent != blank and transparent_header %}
									
									{%- assign logo_alt = settings.logo_transparent.alt | default: shop.name | escape -%}
									{%- assign logo_height = settings.logo_width | divided_by: settings.logo_transparent.aspect_ratio -%}
									{% capture sizes %}(max-width: {{ settings.logo_width | times: 2 }}px) 50vw, {{ settings.logo_width }}px{% endcapture %}
									{% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
									{{ settings.logo_transparent | image_url: width: 600 | image_tag:
										class: 'header__heading-logo header__heading-logo--transparent motion-reduce',
										widths: widths,
										height: logo_height,
										width: settings.logo_width,
										alt: logo_alt,
										sizes: sizes,
										preload: true
									}}								
								{% endif %}
              </div>
            {%- else -%}
              <span class="h4">{{ shop.name }}</span>
            {%- endif -%}
          </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}

    {% if inline_search and section.settings.logo_position != 'top-center' %}
      {% render 'header-search',  input_id: 'Search-In-Modal',  search_type: settings.search_type %}
    {% endif %}

    <div class="header__icons{% if section.settings.enable_country_selector or section.settings.enable_language_selector %} header__icons--localization header-localization{% endif %}">

      {% if localization.available_countries.size > 1 and section.settings.enable_country_selector 
         or localization.available_languages.size > 1 and section.settings.enable_language_selector %}

        <div class="desktop-localization-wrapper">

          {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
            <noscript class="small-hide medium-hide">
              {%- form 'localization', id: 'HeaderLanguageMobileFormNoScript', class: 'localization-form' -%}
                <div class="localization-form__select">
                  <h2 class="visually-hidden" id="HeaderLanguageMobileLabelNoScript">{{ 'localization.language_label' | t }}</h2>
                  <select class="localization-selector link" name="locale_code" aria-labelledby="HeaderLanguageMobileLabelNoScript">
                    {%- for language in localization.available_languages -%}
                      <option value="{{ language.iso_code }}" lang="{{ language.iso_code }}" {%- if language.iso_code == localization.language.iso_code %} selected{% endif %}>
                        {{ language.endonym_name | capitalize }}
                      </option>
                    {%- endfor -%}
                  </select>
                  {% render 'icon-caret' %}
                </div>
                <button class="button button--tertiary">
                  <span>
                    {{ 'localization.update_language' | t }}
                  </span>
                </button>
              {%- endform -%}
            </noscript>

            <localization-form class="small-hide medium-hide no-js-hidden">
              {%- form 'localization', id: 'HeaderLanguageForm', class: 'localization-form' -%}
                <div>
                  <h2 class="visually-hidden" id="HeaderLanguageLabel">{{ 'localization.language_label' | t }}</h2>
                  {%- render 'language-localization', localPosition: 'HeaderLanguage' -%}
                </div>
              {%- endform -%}
            </localization-form>
          {%- endif -%}

          {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
            <noscript class="small-hide medium-hide">
              {%- form 'localization', id: 'HeaderCountryMobileFormNoScript', class: 'localization-form' -%}
                <div class="localization-form__select">
                  <h2 class="visually-hidden" id="HeaderCountryMobileLabelNoScript">{{ 'localization.country_label' | t }}</h2>
                  <select class="localization-selector link" name="country_code" aria-labelledby="HeaderCountryMobileLabelNoScript">
                    {%- for country in localization.available_countries -%}
                      <option value="{{ country.iso_code }}" {%- if country.iso_code == localization.country.iso_code %} selected{% endif %}>
                        {{ country.name }} ({{ country.currency.iso_code }} {{ country.currency.symbol }})
                      </option>
                    {%- endfor -%}
                  </select>
                  {% render 'icon-caret' %}
                </div>

                <button class="button button--tertiary">
                  <span>
                    {{ 'localization.update_country' | t }}
                  </span>
                </button>
              {%- endform -%}
            </noscript>

            <localization-form class="localization-form--country small-hide medium-hide no-js-hidden">
              {%- form 'localization', id: 'HeaderCountryForm', class: 'localization-form' -%}
                <div>
                  <h2 class="visually-hidden" id="HeaderCountryLabel">{{ 'localization.country_label' | t }}</h2>
                  {%- render 'country-localization', 
                    localPosition: 'HeaderCountry',
                    show_image: section.settings.show_image,
                    show_name: section.settings.show_name,
                    show_currency: section.settings.show_currency
                  -%}
                </div>
              {%- endform -%}
            </localization-form>
          {% endif %}
        </div>
      {% endif %}

      {% if settings.search_type == 'popup' %}
        {% render 'header-search', input_id: 'Search-In-Modal',  search_type: settings.search_type %}
      {% endif %}

      {%- if shop.customer_accounts_enabled -%}
        <a href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}" class="header__icon header__icon--account link focus-inset{% if section.settings.menu != blank %} small-hide{% endif %}">
          {% render 'icon-account' %}
          <span class="visually-hidden">
            {%- liquid
              if customer
                echo 'customer.account_fallback' | t
              else
                echo 'customer.log_in' | t
              endif
            -%}
          </span>
        </a>
      {%- endif -%}

      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
        {%- endcase -%}
      {%- endfor -%}

      {% if template != 'cart' %}
        <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
          {%- render 'icon-cart' -%}

          <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>

          {%- if cart != empty -%}
						<div class="cart-count-bubble">
							{%- if cart.item_count < 1000 -%}
								<span aria-hidden="true">{{ cart.item_count }}</span>
							{%- endif -%}
							<span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
						</div>
          {%- endif -%}
        </a>
      {% endif %}

    </div>

  </header>

  {% if section.settings.round_borders == true %}
    <span class="header-corner header-corner-left">
      <svg viewBox="0 0 101 101" stroke="none" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M101 0H0V101H1C1 45.7715 45.7715 1 101 1V0Z"></path>
        <path d="M1 101C1 45.7715 45.7715 1 101 1" fill="none"></path>
      </svg>
    </span>
    
    <span class="header-corner header-corner-right">
      <svg class="w-full h-auto" viewBox="0 0 101 101" stroke="none" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M101 0H0V101H1C1 45.7715 45.7715 1 101 1V0Z"></path>
        <path d="M1 101C1 45.7715 45.7715 1 101 1" fill="none"></path>
      </svg>
    </span>
  {% endif %}

{% if section.settings.sticky_header_type != 'none' %}
  </sticky-header>
{% else %}
  </div>
{% endif %}

{%- if settings.cart_type == "notification" -%}
  {%- render 'cart-notification', 
    color_scheme: section.settings.color_scheme, 
    desktop_menu_type: section.settings.menu_type_desktop 
  -%}
{%- endif -%}

<script src="{{ 'details-disclosure.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'details-modal.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'search-form.js' | asset_url }}" defer="defer"></script>

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.section-header');
      this.headerIsAlwaysSticky = this.getAttribute('data-sticky-type') === 'always' || this.getAttribute('data-sticky-type') === 'reduce-logo-size';
      this.headerBounds = {};
			this.headerTransparent = this.header.querySelector('.header-transparent');
				
			if(this.headerTransparent){
				const setTopPosition = () => { 
					this.headerTopPosition = this.header.offsetHeight;
					this.header.style.marginBottom = `-${this.header.offsetHeight}px`;
				}

				// setTopPosition();
				requestAnimationFrame(setTopPosition);

				let resizeTimeout;
				window.addEventListener('resize', () => {
					clearTimeout(resizeTimeout);
					resizeTimeout = setTimeout(setTopPosition, 60);
				});

				document.body.classList.add('header-transparent-active');
      } 

      this.setHeaderHeight();

      window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));

      if (this.headerIsAlwaysSticky) {
        this.header.classList.add('shopify-section-header-sticky');
      };

      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    setHeaderHeight() {
      document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

			if (scrollTop === 0 ) {
				this.classList.add('header-at-top');
			} else {
				this.classList.remove('header-at-top');
			}		

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('scrolled-past-header');
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
      this.disclosures.forEach(disclosure => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const transparentHeader = document.querySelector('.header-transparent');
    if (transparentHeader) {
      const headerHeight = transparentHeader.offsetHeight;
      transparentHeader.style.marginBottom = `-${headerHeight}px`;
    }
  });

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "settings": [
    {
      "type": "select",
      "id": "logo_position",
      "options": [
        {
          "value": "top-left",
          "label": "t:sections.header.settings.logo_position.options__2.label"
        },
        {
          "value": "top-center",
          "label": "t:sections.header.settings.logo_position.options__3.label"
        },
        {
          "value": "middle-left",
          "label": "t:sections.header.settings.logo_position.options__1.label"
        },
        {
          "value": "middle-center",
          "label": "t:sections.header.settings.logo_position.options__4.label"
        }
      ],
      "default": "middle-left",
      "label": "t:sections.header.settings.logo_position.label",
      "info": "t:sections.header.settings.logo_help.content"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "select",
      "id": "menu_font_weight",
      "label": "Menu font weight",
      "options": [
        {
        "value": "400",
        "label": "Regular"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi Bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "500"
    },
    {
      "type": "select",
      "id": "menu_type_desktop",
      "options": [
        {
          "value": "dropdown",
          "label": "t:sections.header.settings.menu_type_desktop.options__1.label"
        },
        {
          "value": "mega",
          "label": "t:sections.header.settings.menu_type_desktop.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.header.settings.menu_type_desktop.options__3.label"
        }
      ],
      "default": "dropdown",
      "label": "t:sections.header.settings.menu_type_desktop.label",
      "info": "t:sections.header.settings.menu_type_desktop.info"
    },
    {
      "type": "header",
      "content": "Mega menu settings"
    },
    {
      "type": "checkbox",
      "id": "show_mm_image",
      "default": true,
      "label": "Show mega menu image"
    },
    {
      "type": "image_picker",
      "id": "mega_menu_image",
      "label": "Default mega menu image"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "portrait",
          "label": "Portrait"
        },
        {
          "value": "landscape",
          "label": "Landscape"
        },
        {
          "value": "square",
          "label": "Square"
        }
      ],
      "default": "landscape",
      "label": "Image ratio"
    },
    {
      "type": "header",
      "content": "Menu drawer"
    },
    {
      "type": "product",
      "id": "drawer_product",
      "label": "Menu drawer product"
    },
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "t:sections.header.settings.sticky_header_type.options__1.label"
        },
        {
          "value": "on-scroll-up",
          "label": "t:sections.header.settings.sticky_header_type.options__2.label"
        },
        {
          "value": "always",
          "label": "t:sections.header.settings.sticky_header_type.options__3.label"
        },
        {
          "value": "reduce-logo-size",
          "label": "t:sections.header.settings.sticky_header_type.options__4.label"
        }
      ],
      "default": "on-scroll-up",
      "label": "t:sections.header.settings.sticky_header_type.label"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": false,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "checkbox",
      "id": "show_shadow",
      "default": false,
      "label": "Show shadow"
    },
    {
      "type": "checkbox",
      "id": "round_borders",
      "default": true,
      "label": "Round borders"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__1.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-2"
    },
    {
      "type": "color_scheme",
      "id": "menu_color_scheme",
      "label": "t:sections.header.settings.menu_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__3.content",
      "info": "t:sections.header.settings.header__4.info"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": false,
      "label": "t:sections.header.settings.enable_country_selector.label"
    },
    {
      "type": "checkbox",
      "id": "show_image",
      "default": true,
      "label": "Show country flag"
    },
    {
      "type": "checkbox",
      "id": "show_name",
      "default": false,
      "label": "Show country name"
    },
    {
      "type": "checkbox",
      "id": "show_currency",
      "default": true,
      "label": "Show currency code"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__5.content",
      "info": "t:sections.header.settings.header__6.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": false,
      "label": "t:sections.header.settings.enable_language_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.mobile_layout.content"
    },
    {
      "type": "select",
      "id": "mobile_logo_position",
      "options": [
        {
          "value": "center",
          "label": "t:sections.header.settings.mobile_logo_position.options__1.label"
        },
        {
          "value": "left",
          "label": "t:sections.header.settings.mobile_logo_position.options__2.label"
        }
      ],
      "default": "center",
      "label": "t:sections.header.settings.mobile_logo_position.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 26
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 26
    }
  ],
  "max_blocks": 12,
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "link_list",
      "name": "Additional drawer",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "menu_drawer_title",
          "label": "Item name"
        },
        {
          "type": "link_list",
          "id": "menu_drawer",
          "label": "Additional drawer menu",
          "info": "Add an additional drawer menu item to the header navigation."
        },
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon"
        },
        {
          "type": "range",
          "id": "icon_width",
          "min": 10,
          "max": 30,
          "step": 1,
          "unit": "px",
          "label": "Icon width",
          "default": 20
        },
        {
          "type": "select",
          "id": "icon_position",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "top",
              "label": "Top"
            }
          ],
          "default": "top",
          "label": "Icon position"
        }
      ]
    },
    {
      "type": "item_icon",
      "name": "Menu item icon",
      "limit": 10,
      "settings": [
        {
          "type": "text",
          "id": "menu_icon_title",
          "label": "Item name"
        },
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon"
        },
        {
          "type": "range",
          "id": "icon_width",
          "min": 10,
          "max": 30,
          "step": 1,
          "unit": "px",
          "label": "Icon width",
          "default": 20
        },
        {
          "type": "select",
          "id": "icon_position",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "top",
              "label": "Top"
            }
          ],
          "default": "top",
          "label": "Icon position"
        }
      ]
    },
		{
			"type": "pages_transparent_header",
			"name": "Transparent header pages",
			"settings": [
				{
					"type": "color_scheme",
					"id": "color_scheme",
					"label": "t:sections.all.colors.label",
					"default": "scheme-2"
				},
				{
					"type": "link_list",
					"id": "pages",
					"label": "Pages",
					"info": "Add pages where should be a transparent header. Works with a sticky header."
				}
			]
		}
  ]
}
{% endschema %}